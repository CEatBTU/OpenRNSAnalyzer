[35mWARN:[0m run r2 with -e bin.cache=true to fix relocations in disassembly
INFO: Analyze all flags starting with sym. and entry0 (aa)
[2K[2K0x00000af0 > 0x00000b0c 9879[2K[2K0x00000b10 > 0x00000b4c 9881[2K[2K0x00000b4c > 0x00000bb8 9883[2K[2K0x00000cf8 > 0x00000d30 9887[2K[2K0x00000d30 > 0x00000d98 9889[2K[2K0x00000d98 > 0x00000e18 9891[2K[2K0x00001120 > 0x000011b8 9897[2K[2K0x00001230 > 0x000012ac 9901[2K[2K0x000012b4 > 0x00015fb0 9903[2K[2K0x00000bb8 > 0x00000c0c 9885[2K[2K0x000008f8 > 0x00000981 9873[2K[2K0x00000000 > 0x00000004 9873INFO: Analyze all functions arguments/locals (afva@@@F)
[2KINFO: Analyze function calls (aac)
INFO: Analyze len bytes of instructions for references (aar)
INFO: Finding and parsing C++ vtables (avrr)
INFO: Finding xrefs in noncode section (e anal.in=io.maps.x)
INFO: Analyze value pointers (aav)
INFO: aav: 0x00000000-0x00001f34 in 0x0-0x1f34
INFO: Emulate functions to find computed references (aaef)
INFO: Type matching analysis for all functions (aaft)
INFO: Propagate noreturn information (aanr)
INFO: Integrate dwarf function information
INFO: Use -AA or aaaa to perform additional experimental analysis
ERROR: af: Cannot find function at 0x0001a010
ERROR: af: Cannot find function at 0x00001240
