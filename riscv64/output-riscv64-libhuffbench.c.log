Cannot determine entrypoint, using 0x00000690.
Warning: run r2 with -e bin.cache=true to fix relocations in disassembly
[ ] Analyze all flags starting with sym. and entry0 (aa)[[2K[2K0x00000690 > 0x000006b2 9937[2K[2K0x000006b2 > 0x000006de 9939[2K[2K0x000006de > 0x00000718 9941[2K[2K0x000011a2 > 0x000011de 9949[2K[2K0x000011de > 0x000011ec 9951[2K[2K0x000011ec > 0x00001214 9953[2K[2K0x00001214 > 0x0000122e 9955[x] Analyze all flags starting with sym. and entry0 (aa)
[ ] Analyze all functions arguments/locals[[x] Analyze all functions arguments/locals
[2K[ ] Analyze function calls (aac)[[x] Analyze function calls (aac)
[ ] Analyze len bytes of instructions for references (aar)[[x] Analyze len bytes of instructions for references (aar)
[ ] Finding and parsing C++ vtables (avrr)[[x] Finding and parsing C++ vtables (avrr)
[ ] Finding xrefs in noncode section (e anal.in=io.maps.x)[[x] Finding xrefs in noncode section (e anal.in=io.maps.x)
[ ] Analyze value pointers (aav)[[x] Analyze value pointers (aav)
[ ] aav: 0x00000000-0x000014a0 in 0x0-0x14a0[[x] aav: 0x00000000-0x000014a0 in 0x0-0x14a0
[ ] Emulate functions to find computed references (aaef)[[x] Emulate functions to find computed references (aaef)
[ ] Type matching analysis for all functions (aaft)[[x] Type matching analysis for all functions (aaft)
[ ] Propagate noreturn information (aanr)[[x] Propagate noreturn information (aanr)
[ ] Integrate dwarf function information.[[x] Integrate dwarf function information.
[ ] Use -AA or aaaa to perform additional experimental analysis.[[x] Use -AA or aaaa to perform additional experimental analysis.
ERROR: af: Cannot find function at 0x00000000
ERROR: af: Cannot find function at 0x00000000
ERROR: af: Cannot find function at 0x00000000
