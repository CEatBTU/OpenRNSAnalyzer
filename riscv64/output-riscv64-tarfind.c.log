Cannot determine entrypoint, using 0x00000600.
Warning: run r2 with -e bin.cache=true to fix relocations in disassembly
[ ] Analyze all flags starting with sym. and entry0 (aa)[[2K[2K0x00000600 > 0x00000622 9937[2K[2K0x00000622 > 0x0000064e 9939[2K[2K0x0000064e > 0x00000688 9941[2K[2K0x0000068a > 0x00000698 9945[2K[2K0x00000698 > 0x000006ba 9947[2K[2K0x00000914 > 0x00000941 9951[2K[2K0x000006ba > 0x000006d6 9949[x] Analyze all flags starting with sym. and entry0 (aa)
[ ] Analyze all functions arguments/locals[[x] Analyze all functions arguments/locals
[2K[ ] Analyze function calls (aac)[[x] Analyze function calls (aac)
[ ] Analyze len bytes of instructions for references (aar)[[x] Analyze len bytes of instructions for references (aar)
[ ] Finding and parsing C++ vtables (avrr)[[x] Finding and parsing C++ vtables (avrr)
[ ] Finding xrefs in noncode section (e anal.in=io.maps.x)[[x] Finding xrefs in noncode section (e anal.in=io.maps.x)
[ ] Analyze value pointers (aav)[[x] Analyze value pointers (aav)
[ ] aav: 0x00000000-0x00000944 in 0x0-0x944[[x] aav: 0x00000000-0x00000944 in 0x0-0x944
[ ] Emulate functions to find computed references (aaef)[[x] Emulate functions to find computed references (aaef)
[ ] Type matching analysis for all functions (aaft)[[x] Type matching analysis for all functions (aaft)
[ ] Propagate noreturn information (aanr)[[x] Propagate noreturn information (aanr)
[ ] Integrate dwarf function information.[[x] Integrate dwarf function information.
[ ] Use -AA or aaaa to perform additional experimental analysis.[[x] Use -AA or aaaa to perform additional experimental analysis.
ERROR: af: Cannot find function at 0x00000000
ERROR: af: Cannot find function at 0x00000000
ERROR: af: Cannot find function at 0x00000000
