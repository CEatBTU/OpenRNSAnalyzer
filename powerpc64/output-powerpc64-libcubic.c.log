[35mWARN:[0m run r2 with -e bin.cache=true to fix relocations in disassembly
INFO: Analyze all flags starting with sym. and entry0 (aa)
ERROR: af: Cannot find function at 0x0001fde0
INFO: Analyze all functions arguments/locals (afva@@@F)
[2KINFO: Analyze function calls (aac)
[2K[2K0x0000155c > 0x00001581 9876[2K[2K0x00000a20 > 0x00000a24 9880[2K[2K0x000011c4 > 0x000012e0 9884[2K[2K0x00001310 > 0x0000138c 9888[2K[2K0x00001480 > 0x000014f8 9892[2K[2K0x000014fc > 0x00001500 9894WARN: Invalid address from 0x000008a8
WARN: Invalid address from 0x00000914
WARN: Invalid address from 0x000009e0
[2K[2K0x00000868 > 0x000008c0 9874[2K[2K0x000012ec > 0x000012f0 9876[2K[2K0x00000800 > 0x0000081c 9874[2K[2K0x0000081c > 0x00000820 9876[2K[2K0x000007e0 > 0x000007fc 9874[2K[2K0x000007fc > 0x00000800 9876[2K[2K0x00000840 > 0x0000085c 9874[2K[2K0x00000864 > 0x00000868 9876WARN: Invalid address from 0x000014d0
INFO: Analyze len bytes of instructions for references (aar)
INFO: Finding and parsing C++ vtables (avrr)
INFO: Finding xrefs in noncode section (e anal.in=io.maps.x)
INFO: Analyze value pointers (aav)
INFO: aav: 0x00000000-0x0000172c in 0x0-0x172c
INFO: Emulate functions to find computed references (aaef)
INFO: Type matching analysis for all functions (aaft)
INFO: Propagate noreturn information (aanr)
INFO: Integrate dwarf function information
INFO: Use -AA or aaaa to perform additional experimental analysis
[2K[2K0x00000860 > 0x00000864 9873ERROR: af: Cannot find function at 0x000008c0
[2K[2K0x00000760 > 0x000007a4 9873[2K[2K0x000007bc > 0x000007c1 9875[2K[2K0x0000167c > 0x00001685 9873ERROR: af: Cannot find function at 0x00001648
ERROR: af: Cannot find function at 0xffffffffffffffd0
[2K[2K0x00000120 > 0x00000128 9873[2K[2K0x00000158 > 0x00000160 9875[2K[2K0x000001a0 > 0x000001b9 9877ERROR: af: Cannot find function at 0x00000000
ERROR: af: Cannot find function at 0xfffffffffffffdd0
[2K[2K0x0000011c > 0x00000120 9873ERROR: af: Cannot find function at 0x00000030
[2K[2K0x00000118 > 0x0000011c 9873ERROR: af: Cannot find function at 0x00000060
ERROR: af: Cannot find function at 0xfffffffffffffdc0
[2K[2K0x00000114 > 0x00000118 9873ERROR: af: Cannot find function at 0x00000090
[2K[2K0x00000110 > 0x00000114 9873ERROR: af: Cannot find function at 0x000000c0
WARN: pj_ks: assertion 'j && k && v' failed (line 191)
WARN: pj_ks: assertion 'j && k && v' failed (line 191)
WARN: pj_ks: assertion 'j && k && v' failed (line 191)
WARN: pj_ks: assertion 'j && k && v' failed (line 191)
WARN: pj_ks: assertion 'j && k && v' failed (line 191)
WARN: pj_ks: assertion 'j && k && v' failed (line 191)
WARN: pj_ks: assertion 'j && k && v' failed (line 191)
WARN: pj_ks: assertion 'j && k && v' failed (line 191)
WARN: pj_ks: assertion 'j && k && v' failed (line 191)
WARN: pj_ks: assertion 'j && k && v' failed (line 191)
WARN: pj_ks: assertion 'j && k && v' failed (line 191)
WARN: pj_ks: assertion 'j && k && v' failed (line 191)
WARN: pj_ks: assertion 'j && k && v' failed (line 191)
WARN: pj_ks: assertion 'j && k && v' failed (line 191)
WARN: pj_ks: assertion 'j && k && v' failed (line 191)
WARN: pj_ks: assertion 'j && k && v' failed (line 191)
WARN: pj_ks: assertion 'j && k && v' failed (line 191)
WARN: pj_ks: assertion 'j && k && v' failed (line 191)
WARN: pj_ks: assertion 'j && k && v' failed (line 191)
WARN: pj_ks: assertion 'j && k && v' failed (line 191)
WARN: pj_ks: assertion 'j && k && v' failed (line 191)
WARN: pj_ks: assertion 'j && k && v' failed (line 191)
WARN: pj_ks: assertion 'j && k && v' failed (line 191)
WARN: pj_ks: assertion 'j && k && v' failed (line 191)
WARN: pj_ks: assertion 'j && k && v' failed (line 191)
WARN: pj_ks: assertion 'j && k && v' failed (line 191)
